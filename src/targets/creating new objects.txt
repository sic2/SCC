http://web.mit.edu/javadev/packages/jasmin/doc/

Create a separate .j file for class <NEW CLASS>


; FIELDS
.field public testA I
.field public testB I

; CONSTRUCTOR
public TestClass(int);
Code:
0: aload_0
1: invokespecial  #1; //Method java/lang/Object."<init>":()V
4: aload_0
5: iload_1
6: putfield #2; //Field testA:I
9: aload_0
10: bipush   10
12: putfield #3; //Field testB:I
15: return


From main class:

; CREATING NEW OBJECT
new <NEW CLASS>
dup
bipush X; PASS ARGUMENT
invokespecial <NEW CLASS>.<init>(I)V
astore_1 ; storing object

; GETTING FIELDS 
aload_1 ; loading object
getfield <NEW CLASS>.<FIELD>:I ; I represent the field type

; UPDATING FIELDS
aload_1
bipush 10 ; or other operators
putfield simple$<NEW CLASS>.<FIELD>:I

; CALLING METHOD
aload_1
getfield simple$<NEW CLASS>.<FIELD_0>:I ; I represent the field type
aload_1
getfield simple$<NEW CLASS>.<FIELD_1>:I ; I represent the field type
invokestatic function(II)Z
pop



COMPARISON METHOD

public boolean compare(TestClass);
  Code:
   0: aload_0
   1: getfield #6; //Field integer:I
   4: aload_1
   5: getfield #6; //Field integer:I
   8: if_icmpne   27
   11:   aload_0
   12:   getfield #3; //Field str:Ljava/lang/String;
   15:   aload_1
   16:   getfield #3; //Field str:Ljava/lang/String;
   19:   invokevirtual  #7; //Method java/lang/String.equals:(Ljava/lang/Object;)Z
   22:   ifeq  27
   25:   iconst_1
   26:   ireturn
   27:   iconst_0
   28:   ireturn



